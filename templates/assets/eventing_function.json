[
    {
        "appcode": "function OnUpdate(doc, meta) {\n    const docid = meta.id\n    log(\"Doc created/updated\", docid);\n\n    const { \n        product_name,\n        product_overview,\n        product_promotion_details,\n        product_eligibles,\n        product_details,\n        product_exclusions,\n        checked,\n        embedding,\n        embedding_hugging_face\n    } = doc \n\n    if ( checked || embedding != null || embedding_hugging_face != null ) {\n        log(\"document already embedded, returning\")\n        return \n    }\n\n    const assembled_for_embedding = [product_name, product_overview, product_promotion_details, product_eligibles, product_details, product_exclusions].join(\".  \")\n\n    log(\"assembled_for_embedding: \", assembled_for_embedding)\n\n    var request = {\n        path: '/create_embedding',\n        params: {\n        },\n        body: {\n            \"string\": assembled_for_embedding,\n        }\n    };\n\n    var response = curl('POST', embedding_endpoint, request);\n\n    if (response.status == 200) {\n        log('success!')\n        var data = response.body;\n        const [openai_embedding, huggingface_embedding] = data\n\n        let newDoc = doc \n\n        newDoc['assembled_for_embedding'] = assembled_for_embedding\n        newDoc['embedding'] = openai_embedding\n        newDoc['embedding_hugging_face'] = huggingface_embedding\n        newDoc['checked'] = true\n\n        target[docid] = newDoc\n    }\n\n    else { \n        log(\"Failed to create profile: \" + response.status + \" \" + response.body)\n    }\n\n    return \n}\n\nfunction OnDelete(meta, options) {\n    log(\"Doc deleted/expired\", meta.id);\n}",
        "depcfg": {
            "buckets": [
                {
                    "alias": "target",
                    "bucket_name": "insurance-products",
                    "scope_name": "_default",
                    "collection_name": "_default",
                    "access": "rw"
                }
            ],
            "curl": [
                {
                    "hostname": "http://ec2-13-229-92-40.ap-southeast-1.compute.amazonaws.com:5000",
                    "value": "embedding_endpoint",
                    "auth_type": "no-auth",
                    "username": "",
                    "password": "*****",
                    "bearer_key": "*****",
                    "allow_cookies": false,
                    "validate_ssl_certificate": false
                }
            ],
            "source_bucket": "insurance-products",
            "source_scope": "_default",
            "source_collection": "_default",
            "metadata_bucket": "vector-sample",
            "metadata_scope": "_default",
            "metadata_collection": "_default"
        },
        "version": "evt-7.6.1-3200-ee",
        "enforce_schema": false,
        "handleruuid": 2563288348,
        "function_instance_id": "VEKRC2",
        "appname": "embedding2",
        "settings": {
            "dcp_stream_boundary": "everything",
            "deadline_timeout": 62,
            "deployment_status": true,
            "description": "",
            "execution_timeout": 60,
            "language_compatibility": "6.6.2",
            "log_level": "INFO",
            "n1ql_consistency": "none",
            "processing_status": true,
            "timer_context_size": 1024,
            "user_prefix": "eventing",
            "worker_count": 10
        },
        "function_scope": {
            "bucket": "*",
            "scope": "*"
        }
    }
]